# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    defaults:
      run:
        working-directory: .

    # Steps represent a sequence of tasks that will be executed as part of the job
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies  
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller  
    - name: Build
      run: |
        pyinstaller -F my_script.py -n FtpShare 

    - name: Package
      working-directory: .
      run: |
        #tar -zcvf ftpshare.tar.gz -C ./dist * 
        chmod +x dist/*
        tar -zcvf ftpshare.tar.gz -C dist .
        ls

    - name: Generate Tag
      id: tag
      run: |
        echo "RELEASE_VERSION=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Gets latest created release info
      id: latest_release_info
      uses: jossef/action-latest-release-info@v1.1.0
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
        asset_path: dist/ftpshare.tar.gz
        asset_name: dist/ftpshare-${{steps.tag}}.tar.gz
        asset_content_type: application/gzip
